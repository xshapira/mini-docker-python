[tool.poetry]
name = "app"
version = "0.1.0"
description = ""
authors = ["Admin <admin@example.com>"]
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
pydantic = "^2.7.1"
pydantic-settings = { extras = ["dotenv"], version = "^2.2.1" }
pika = "^1.3.2"
aio-pika = "^9.4.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.5"

[tool.ruff]
line-length = 88
exclude = [
  '.git',
  '__pycache__',
  '__init__.py',
  '.mypy_cache',
  '.pytest_cache',
  'theHarvester/',
]
lint.select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "C4", # flake8-comprehensions
  "B",  # flake8-bugbear
  "UP", # pyupgrade
]
lint.ignore = [
  "E501", # line too long
  "C901", # Comprehension is too complex (11 > 10)
  "W191", # indentation contains tabs
  "E402",
]
lint.unfixable = ["F841"]
extend-include = ["*.ipynb"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
